{
    "contents" : "require(\"jsonlite\")\nrequire(\"RCurl\")\nrequire(ggplot2)\nrequire(dplyr)\n\n# The following is equivalent to KPI Story 2 Sheet 2 and Parameters Story 3 in \"Crosstabs, KPIs, Barchart.twb\"\n\n# These will be made to more resemble Tableau Parameters when we study Shiny.\nKPI_Low_Max_value = 4750     \nKPI_Medium_Max_value = 5000\n\ndf <- data.frame(fromJSON(getURL(URLencode(gsub(\"\\n\", \" \", 'skipper.cs.utexas.edu:5001/rest/native/?query=\n\"select color, clarity, sum_price, round(sum_carat) as sum_carat, kpi as ratio, \ncase\nwhen kpi < \"p1\" then \\\\\\'03 Low\\\\\\'\nwhen kpi < \"p2\" then \\\\\\'02 Medium\\\\\\'\nelse \\\\\\'01 High\\\\\\'\nend kpi\nfrom (select color, clarity, \n   sum(price) as sum_price, sum(carat) as sum_carat, \n   sum(price) / sum(carat) as kpi\n   from diamonds\n   group by color, clarity)\norder by clarity;\"\n')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_Low_Max_value, p2=KPI_Medium_Max_value), verbose = TRUE))); View(df)\n\n# df <- diamonds %>% group_by(color, clarity) %>% summarize(sum_price = sum(price), sum_carat = sum(carat)) %>% mutate(ratio = sum_price / sum_carat) %>% mutate(kpi = ifelse(ratio <= KPI_Low_Max_value, '03 Low', ifelse(ratio <= KPI_Medium_Max_value, '02 Medium', '01 High'))) %>% rename(COLOR=color, CLARITY=clarity, SUM_PRICE=sum_price, SUM_CARAT=sum_carat, RATIO=ratio, KPI=kpi)\n\nspread(df, COLOR, SUM_PRICE) %>% View\n\nggplot() + \n  coord_cartesian() + \n  scale_x_discrete() +\n  scale_y_discrete() +\n  labs(title='Diamonds Crosstab\\nSUM_PRICE, SUM_CARAT, SUM_PRICE / SUM_CARAT') +\n  labs(x=paste(\"COLOR\"), y=paste(\"CLARITY\")) +\n  layer(data=df, \n        mapping=aes(x=COLOR, y=CLARITY, label=SUM_PRICE), \n        stat=\"identity\", \n        stat_params=list(), \n        geom=\"text\",\n        geom_params=list(colour=\"black\"), \n        position=position_identity()\n  ) +\n  layer(data=df, \n        mapping=aes(x=COLOR, y=CLARITY, label=SUM_CARAT), \n        stat=\"identity\", \n        stat_params=list(), \n        geom=\"text\",\n        geom_params=list(colour=\"black\", vjust=2), \n        position=position_identity()\n  ) +\n  layer(data=df, \n        mapping=aes(x=COLOR, y=CLARITY, label=round(RATIO, 2)), \n        stat=\"identity\", \n        stat_params=list(), \n        geom=\"text\",\n        geom_params=list(colour=\"black\", vjust=4), \n        position=position_identity()\n  ) +\n  layer(data=df, \n        mapping=aes(x=COLOR, y=CLARITY, fill=KPI), \n        stat=\"identity\", \n        stat_params=list(), \n        geom=\"tile\",\n        geom_params=list(alpha=0.50), \n        position=position_identity()\n  )\n\n# The following is equivalent to Windowing Story 5 Sheet 4 in \"Crosstabs, KPIs, Barchart.twb\"\n\ndf <- data.frame(fromJSON(getURL(URLencode(gsub(\"\\n\", \" \", 'skipper.cs.utexas.edu:5001/rest/native/?query=\n\"select color, clarity, avg_price, \navg(avg_price) \nOVER (PARTITION BY clarity ) as window_avg_price\nfrom (select color, clarity, avg(price) avg_price\n   from diamonds\n   group by color, clarity)\norder by clarity;\"\n')), httpheader=c(DB='jdbc:oracle:thin:@sayonara.microlab.cs.utexas.edu:1521:orcl', USER='C##cs329e_UTEid', PASS='orcl_UTEid', MODE='native_mode', MODEL='model', returnDimensions = 'False', returnFor = 'JSON', p1=KPI_Low_Max_value, p2=KPI_Medium_Max_value), verbose = TRUE))); View(df)\n\n# df <- diamonds %>% group_by(color, clarity) %>% summarize(AVG_PRICE = mean(price)) %>% rename(COLOR=color, CLARITY=clarity)\n# df1 <- df %>% ungroup %>% group_by(CLARITY) %>% summarize(WINDOW_AVG_PRICE=mean(AVG_PRICE))\n# df <- inner_join(df, df1, by=\"CLARITY\")\n\nspread(df, COLOR, AVG_PRICE) %>% View\n\nggplot() + \n  coord_cartesian() + \n  scale_x_discrete() +\n  scale_y_continuous() +\n  facet_wrap(~CLARITY, ncol=1) +\n  labs(title='Diamonds Barchart\\nAVERAGE_PRICE, WINDOW_AVG_PRICE, ') +\n  labs(x=paste(\"COLOR\"), y=paste(\"AVG_PRICE\")) +\n  layer(data=df, \n        mapping=aes(x=COLOR, y=AVG_PRICE), \n        stat=\"identity\", \n        stat_params=list(), \n        geom=\"bar\",\n        geom_params=list(colour=\"blue\"), \n        position=position_identity()\n  ) + coord_flip() +\n  layer(data=df, \n        mapping=aes(x=COLOR, y=AVG_PRICE, label=round(AVG_PRICE)), \n        stat=\"identity\", \n        stat_params=list(), \n        geom=\"text\",\n        geom_params=list(colour=\"black\", hjust=-0.5), \n        position=position_identity()\n  ) +\n  layer(data=df, \n        mapping=aes(x=COLOR, y=AVG_PRICE, label=round(WINDOW_AVG_PRICE)), \n        stat=\"identity\", \n        stat_params=list(), \n        geom=\"text\",\n        geom_params=list(colour=\"black\", hjust=-2), \n        position=position_identity()\n  ) +\n  layer(data=df, \n        mapping=aes(x=COLOR, y=AVG_PRICE, label=round(AVG_PRICE - WINDOW_AVG_PRICE)), \n        stat=\"identity\", \n        stat_params=list(), \n        geom=\"text\",\n        geom_params=list(colour=\"black\", hjust=-5), \n        position=position_identity()\n  ) +\n  layer(data=df, \n        mapping=aes(yintercept = WINDOW_AVG_PRICE), \n        geom=\"hline\",\n        geom_params=list(colour=\"red\")\n  ) \n",
    "created" : 1447192624124.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3280976081",
    "id" : "A90FA307",
    "lastKnownWriteTime" : 1447174760,
    "path" : "~/Desktop/Desktop/UT/Fall 2015/Data Visualization/DrCannata/RWorkshop/12 Tableau/01 Crosstabs, KPIs, Barchart.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}